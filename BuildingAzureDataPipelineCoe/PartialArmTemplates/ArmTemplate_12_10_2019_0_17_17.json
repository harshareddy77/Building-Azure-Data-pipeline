{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "BuildingAzureDataPipelineCoe"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "SqlServerTable2",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().Load_Type,'Full')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Copy data1",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderQuery": {
															"value": "SELECT * FROM @{concat(item().Schema_Name,'.',item().Table_Name)}",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "SqlServerTable_Coe_Poc",
														"type": "DatasetReference"
													}
												],
												"outputs": [
													{
														"referenceName": "DelimitedText1",
														"type": "DatasetReference"
													}
												]
											},
											{
												"name": "Stored Procedure1",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy data1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[full_load_Ref]",
													"storedProcedureParameters": {
														"name": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"pipeline_id": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"rowsCopied": {
															"value": {
																"value": "@activity('Copy data1').output.rowsCopied",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"rowsRead": {
															"value": {
																"value": "@activity('Copy data1').output.rowsRead",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"runid": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"S_No": {
															"value": {
																"value": "@item().S_No",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"Schema_Name": {
															"value": {
																"value": "@item().Schema_Name",
																"type": "Expression"
															},
															"type": "String"
														},
														"sink": {
															"value": {
																"value": "@activity('Copy data1').output.executionDetails[0].sink.type",
																"type": "Expression"
															},
															"type": "String"
														},
														"source": {
															"value": {
																"value": "@activity('Copy data1').output.executionDetails[0].source.type",
																"type": "Expression"
															},
															"type": "String"
														},
														"start": {
															"value": {
																"value": "@activity('Copy data1').output.executionDetails[0].start",
																"type": "Expression"
															},
															"type": "String"
														},
														"status": {
															"value": {
																"value": "@activity('Copy data1').output.executionDetails[0].status",
																"type": "Expression"
															},
															"type": "String"
														},
														"Table_Name": {
															"value": {
																"value": "@item().Table_Name",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SqlServer_Coe",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		}
	]
}